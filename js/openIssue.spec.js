// generated by xUnit Wed Oct 08 2014 16:15:01 GMT+0300 (FLE Daylight Time)
// jasmine unit test for openIssue.js
// brackets-xunit: includes=openIssue.js
/*global describe, it, expect, setErrorText, colorBorderToRed, returnError, setUrl, removeSpaces, removeSkypeFormatting, openWindow, openIssue, inputKeyListener, listenInputKey, listenKeys */

describe("test setUrl(urlOption)", function () {
    "use strict";
    it("setUrl(urlOption) === ?", function () {
		var urlOption = "http://example.com";
		var url;
		setUrl(urlOption);
        expect(url).toEqual("http://example.com/browse/");
    });
});
describe("test removeSpaces(string), first 1 space", function () {
    "use strict";
    var string = " string";
    it("removeSpaces(string) === ?", function () {
        expect(removeSpaces(string)).toEqual("string");
    });
});
describe("test removeSpaces(string), first 3 spaces", function () {
    "use strict";
    var string = "   string";
    it("removeSpaces(string) === ?", function () {
        expect(removeSpaces(string)).toEqual("string");
    });
});
describe("test removeSpaces(string), last 1 space", function () {
    "use strict";
    var string = "string ";
    it("removeSpaces(string) === ?", function () {
        expect(removeSpaces(string)).toEqual("string");
    });
});
describe("test removeSpaces(string), last 4 space", function () {
    "use strict";
    var string = "string    ";
    it("removeSpaces(string) === ?", function () {
        expect(removeSpaces(string)).toEqual("string");
    });
});
describe("test removeSpaces(string), without spaces", function () {
    "use strict";
    var string = "string";
    it("removeSpaces(string) === ?", function () {
        expect(removeSpaces(string)).toEqual("string");
    });
});
describe("test removeSpaces(string), first and last 1 space", function () {
    "use strict";
    var string = " string ";
    it("removeSpaces(string) === ?", function () {
        expect(removeSpaces(string)).toEqual("string");
    });
});
describe("test removeSpaces(string), first and last 2 spaces", function () {
    "use strict";
    var string = "  string  ";
    it("removeSpaces(string) === ?", function () {
        expect(removeSpaces(string)).toEqual("string");
    });
});
describe("test removeSkypeFormatting(string)", function () {
    "use strict";
    var string = "[14:04:47] Irina Ivanova: ISSUE-555";
    it("removeSkypeFormatting(string) === ?", function () {
        expect(removeSkypeFormatting(string)).toEqual("ISSUE-555");
    });
});